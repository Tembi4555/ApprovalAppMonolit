@model List<TicketViewModel>
@{
    ViewData["Title"] = "Home Page";
    string personIdString = Context.User.FindFirst("PersonId")?.Value;
    long.TryParse(personIdString, out long result);

    long personId = result;
    string hubUrl = $"{Context.Request.Scheme}://{Context.Request.Host}/channel";
}
<div class="container">
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <a class="nav-link active" aria-current="page" id="incoming-tab" data-bs-toggle="tab" href="#incoming" role="tab" aria-controls="incoming" aria-selected="true">Входящие задачи</a>
        </li>
        <li class="nav-item" role="presentation">
            <a class="nav-link" id="outgoing-tab" data-bs-toggle="tab" href="#outgoing" role="tab" aria-controls="outgoing" aria-selected="false">Исходящие задачи</a>
        </li>
        <li class="nav-item">
            <a class="btn btn-primary" id="btn-create-task" href="@Url.Action("Create","Home")" type="button" aria-selected="false">+ Создать задачу</a>
        </li>
    </ul>
    <hr />
    <div class="tab-content">
        <div class="tab-pane active" id="incoming">
            <table 
                id="incoming-table">
                <thead>
                    <tr>
                        <th data-field="id">№</th>
                        <th data-field="title">Тема</th>
                        <th data-field="description">Описание</th>
                        <th data-field="deadline">Срок</th>
                        <th data-field="createDate">Дата создания</th>
                    </tr>
                </thead>
            </table>
        </div>
        <div class="tab-pane" id="outgoing">
            <table id="outgoing-table">
                <thead>
                    <tr>
                        <th data-field="id">№</th>
                        <th data-field="title">Тема</th>
                        <th data-field="description">Описание</th>
                        <th data-field="deadline">Срок</th>
                        <th data-field="createDate">Дата создания</th>
                    </tr>
                </thead>
            </table>
        </div>
    
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("@hubUrl")
            .withAutomaticReconnect()
            .build();

        connection.on("ReceiveMessage", function (personsIds, message) {
            if (personsIds.includes("@personIdString")) {
                Toastify({
                    text: message,
                    duration: 3000,  // Время в миллисекундах
                    close: true,     // Кнопка для закрытия
                    gravity: "top",  // Положение: top или bottom
                    position: "right", // Положение: left, center, right
                    backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)"
                }).showToast();
                updateIncomingTable();
                updateOutgoingTable();
            }
            

        });

        connection.start()
            .then(() => {
                console.log("SignalR соединение установлено!");
            })
            .catch(error => {
                console.log("Ошибка при подключении:", error);
            });

        var $incomingTable = $('#incoming-table')
        var $outgoingTable = null
        
         $(function () {
            createIncomingTable()

            $("#outgoing-tab").click(function () {
                if (!$outgoingTable){
                    createOutgoingTable();
                }
            });

            $("#incoming-tab").click(function () {
                
            });
            
        })

        function createIncomingTable(){
            $.ajax({
                url: '@Url.Action("GetIncoming", "Home")',
                method: 'post',
                dataType: 'html',
                data: { approvingId: @personId },
                success: function (data) {
                    var res = JSON.parse(data)
                    $incomingTable.bootstrapTable({ data: res });
                }
            });
        }

        function updateIncomingTable()
        {
            $.ajax({
                url: '@Url.Action("GetIncoming", "Home")',
                method: 'post',
                dataType: 'html',
                data: { approvingId: @personId },
                success: function (data) {
                    var res = JSON.parse(data)
                    $incomingTable.bootstrapTable( 'load', res );
                }
            });
        }

        function createOutgoingTable() {
            $outgoingTable = $('#outgoing-table')
            $.ajax({
                url: '@Url.Action("GetOutgoing", "Home")',
                method: 'post',
                dataType: 'html',
                data: { idAuthor: @personId },
                success: function (data) {
                    var res = JSON.parse(data)
                    $outgoingTable.bootstrapTable({ data: res });
                }
            });
        }

        function updateOutgoingTable() {
            if ($outgoingTable) {
                $.ajax({
                    url: '@Url.Action("GetOutgoing", "Home")',
                    method: 'post',
                    dataType: 'html',
                    data: { idAuthor: @personId },
                    success: function (data) {
                        var res = JSON.parse(data)
                        $outgoingTable.bootstrapTable('load', res);
                    }
                });
            }
            
        }

        // Toastify({
        //     text: "Это уведомление!",
        //     duration: 3000,  // Время в миллисекундах
        //     close: true,     // Кнопка для закрытия
        //     gravity: "top",  // Положение: top или bottom
        //     position: "right", // Положение: left, center, right
        //     backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)"
        // }).showToast();

    </script>
}
